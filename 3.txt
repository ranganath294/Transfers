{% extends 'iot_catalogue/base.html' %}

{% block content_div %}
{% if is_admin %}

<div class="alert alert-info" role="alert">
  <i class="bi bi-info-circle"></i> * To create new entries, please select "Other" from the respective dropdown and enter the new name in the field that appears.
</div>

<form method="post" action="{% url 'iot_catalogue:data_entry' %}" class="row g-3">
{% csrf_token %}
<div class="col-md-6">
<div class="mb-3">
<label class="form-label">Device Type</label>
<select name="device_type" class="form-select optimized-select">
<option value="default" selected>-- All --</option>
<option value="Headset">Headset</option>
<option value="Speaker">Speaker</option>
<option value="Earbud">Earbud</option>
<option value="Earbud - LEA">Earbud - LEA</option>
<option value="HID Mouse">HID Mouse</option>
<option value="HID Keyboard">HID Keyboard</option>
<option value="HID Gamepad">HID Gamepad</option>
<option value="HOGP Mouse">HOGP Mouse</option>
<option value="HOGP Keyboard">HOGP Keyboard</option>
<option value="HOGP Gamepad">HOGP Gamepad</option>
<option value="Carkit">Carkit</option>
<option value="Smart Watch">Smart Watch</option>
<option value="Fitness band">Fitness band</option>
<option value="Heart rate monitor">Heart rate monitor</option>
<option value="LE tracker">LE tracker</option>
<option value="Phone">Phone</option>
<option value="Smart ring">Smart ring</option>
<option value="Health device">Health device</option>
<option value="Smart bulb">Smart bulb</option>
</select>
</div>

<div class="mb-3">
<label class="form-label" for="model_number-select">Model Number</label>
<select name="model_number" class="form-select optimized-select" id="model_number-select">
<option value="default" selected>-- All --</option>
<option value="other">Other</option>
{% for model_number in model_numbers %}
<option value="{{ model_number }}">{{ model_number }}</option>
{% endfor %}
</select>
<input type="text" name="new_model_number" class="form-control mt-2" placeholder="Enter new model number" disabled>
</div>

<div class="mb-3">
<label class="form-label">Procured Date</label>
<div class="input-group">
<input type="date" name="procured_date" class="form-control">
</div>
</div>

<div class="mb-3">
<label class="form-label">Model Year</label>
<div class="input-group">
<input type="number" name="model_year" class="form-control">
</div>
</div>
</div>

<div class="col-md-6">
<div class="mb-3">
<label class="form-label" for="manufacturer-select">Manufacturer</label>
<select name="manufacturer" class="form-select optimized-select" id="manufacturer-select">
<option value="default" selected>-- All --</option>
<option value="other">Other</option>
{% for manufacturer in manufacturers %}
<option value="{{ manufacturer }}">{{ manufacturer }}</option>
{% endfor %}
</select>
<input type="text" name="new_manufacturer" class="form-control mt-2" placeholder="Enter new manufacturer" disabled>
</div>

<div class="mb-3">
<label class="form-label" for="chipset_manufacturer-select">Chipset Manufacturer</label>
<select name="chipset_manufacturer" class="form-select optimized-select" id="chipset_manufacturer-select">
<option value="default" selected>-- All --</option>
<option value="other">Other</option>
{% for chipset_manufacturer in chipset_manufacturers %}
<option value="{{ chipset_manufacturer }}">{{ chipset_manufacturer }}</option>
{% endfor %}
</select>
<input type="text" name="new_chipset_manufacturer" class="form-control mt-2" placeholder="Enter new chipset manufacturer" disabled>
</div>

<div class="mb-3">
<label class="form-label">Geo Locations</label>
<select name="geo_location" class="form-select">
<option value="default" selected>-- All --</option>
<option value="SD">SD</option>
<option value="SDC">SDC</option>
<option value="QIPL">QIPL</option>
</select>
</div>
</div>

<div class="col-12 text-end">
<button type="submit" class="btn btn-primary">Create</button>
</div>
</form>

<style>
/* ... (previous styles remain the same) ... */
</style>

<script>
// Custom select with virtual scrolling and search that can be reused
class OptimizedSelect {
    constructor(originalSelect, options = {}) {
        this.originalSelect = originalSelect;
        this.options = options;
        this.itemHeight = 35;
        this.visibleItems = 8;
        this.allOptions = Array.from(originalSelect.options).map(opt => ({
            value: opt.value,
            label: opt.text
        }));
        this.isOpen = false;

        // Find the corresponding new entry input field
        const inputName = `new_${originalSelect.name}`;
        this.newEntryInput = document.querySelector(`input[name="${inputName}"]`);

        this.init();
    }

    // ... (previous methods remain the same) ...

    selectOption(option) {
        // Update original select
        this.originalSelect.value = option.value;
        this.originalSelect.dispatchEvent(new Event('change'));

        // Update custom select
        this.button.textContent = option.label;

        // Enable/disable new entry input field based on selection
        if (this.newEntryInput) {
            this.newEntryInput.disabled = option.value !== 'other';
        }

        this.closeDropdown();
    }
}

// Initialize all optimized selects
document.addEventListener('DOMContentLoaded', function() {
    // Initialize optimized selects for all elements with the 'optimized-select' class
    document.querySelectorAll('.optimized-select').forEach(select => {
        new OptimizedSelect(select);
        
        // Add change event listener to handle the original select changes
        select.addEventListener('change', function() {
            const inputName = `new_${this.name}`;
            const newEntryInput = document.querySelector(`input[name="${inputName}"]`);
            if (newEntryInput) {
                newEntryInput.disabled = this.value !== 'other';
            }
        });
    });
});
</script>
{% endif %}
{% endblock %}